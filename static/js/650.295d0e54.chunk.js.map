{"version":3,"file":"static/js/650.295d0e54.chunk.js","mappings":"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","sources":["webpack://react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","redux/contacts/selectors.js","webpack://react-hw-08-phonebook/./src/Components/Form/Form.module.css?ea3d","Components/Form/Form.jsx","webpack://react-hw-08-phonebook/./src/Components/Contact/Contact.module.css?ac0c","Components/Contact/Contact.jsx","webpack://react-hw-08-phonebook/./src/Components/EditForm/EditForm.module.css?4f6f","Components/EditForm/EditForm.jsx","Components/Modal/Modal.jsx","webpack://react-hw-08-phonebook/./src/Components/ContactList/ContactsList.module.css?88eb","Components/ContactList/ContactList.jsx","webpack://react-hw-08-phonebook/./src/Components/Filter/Filter.module.css?3b56","Components/Filter/Filter.jsx","Components/Spinner/Spinner.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Contacts_button__L+4X8\",\"container\":\"Contacts_container__wv55k\"};","export const getContacts = state => state.contacts;\r\n\r\nexport const getFilter = state => state.filter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__m0h+p\",\"input\":\"Form_input__aJO77\",\"button\":\"Form_button__8F+J3\"};","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\r\n\r\nimport { addContact } from '../../redux/contacts/operations';\r\nimport { getContacts } from '../../redux/contacts/selectors';\r\n\r\nimport s from './Form.module.css';\r\n\r\nexport default function Form({ setActive }) {\r\n  const dispatch = useDispatch();\r\n  const { items } = useSelector(getContacts);\r\n\r\n  const initialFormData = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  const [formData, setFormData] = useState(initialFormData);\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormData(prevFormData => ({ ...prevFormData, [name]: value }));\r\n  };\r\n\r\n  const nameUniquenessCheck = newName => {\r\n    return items.some(contact => contact.name === newName);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    if (nameUniquenessCheck(formData.name)) {\r\n      Notify.info('such contact already exists',{position:'center-top'});\r\n      setFormData(initialFormData);\r\n      setActive(false);\r\n      return;\r\n    }\r\n    try {\r\n      await dispatch(addContact(formData)).unwrap();\r\n      Notify.success('new contact added',{position:'center-top'});\r\n      setFormData(initialFormData);\r\n      setActive(false);\r\n    } catch (error) {\r\n      Notify.failure('something went wrong...',{position:'center-top'});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label>\r\n        <input\r\n          className={s.input}\r\n          placeholder=\"Name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label>\r\n        <input\r\n          className={s.input}\r\n          placeholder=\"Number\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={formData.number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <button className={s.button}>add contact</button>\r\n    </form>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Contact_item__ksxu7\",\"button\":\"Contact_button__bOLoR\",\"buttonEdite\":\"Contact_buttonEdite__2KaYX\"};","import { FaUserEdit } from 'react-icons/fa';\r\nimport { MdDelete } from 'react-icons/md';\r\n\r\nimport s from './Contact.module.css';\r\n\r\nfunction Contact({ id, name, number, fnDelete, handleEditContact }) {\r\n  return (\r\n    <li className={s.item} >\r\n      <p>\r\n        <strong>{name}</strong>: {number}\r\n      </p>\r\n      <div>\r\n        <button\r\n          className={s.buttonEdite}\r\n          onClick={() => handleEditContact({ id, name, number })}\r\n        >\r\n          <FaUserEdit color=\"white\" />\r\n        </button>\r\n        <button className={s.button} onClick={() => fnDelete(id)}>\r\n          <MdDelete color=\"white\" />\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"EditForm_form__OjMLb\",\"input\":\"EditForm_input__x83JY\",\"button\":\"EditForm_button__Zt9F3\"};","\r\nimport { useDispatch } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\r\n\r\nimport { updateContact } from '../../redux/contacts/operations';\r\nimport s from './EditForm.module.css';\r\n\r\nfunction EditForm({ currentContact, setActive }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const initialFormData = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  const [formData, setFormData] = useState(initialFormData);\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setFormData(prevFormData => ({ ...prevFormData, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const { name, number } = formData;\r\n    try {\r\n      await dispatch(updateContact({ currentContact, name, number })).unwrap();\r\n      Notify.success('contact changed',{position:'center-top'});\r\n      setActive(false);\r\n      setFormData(initialFormData);\r\n    } catch (error) {\r\n      Notify.failure('something went wrong...',{position:'center-top'});\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label>\r\n        <input\r\n          className={s.input}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          defaultValue={currentContact?.name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        <input\r\n          className={s.input}\r\n          onChange={handleChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          defaultValue={currentContact?.number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button className={s.button}>Edit contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default EditForm;\r\n","function Modal({active,setActive,children}) {\r\n  return (\r\n    <div className={active? \"modal active\" : \"modal\"} onClick={()=>setActive(false)}>\r\n          <div className=\"modal_content\" onClick={(e) => e.stopPropagation()}>\r\n              {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__Mqb2W\"};","import { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\r\n\r\nimport { fetchContacts, deleteContact } from '../../redux/contacts/operations';\r\nimport { getContacts, getFilter } from '../../redux/contacts/selectors';\r\nimport Contact from '../Contact/Contact';\r\nimport EditForm from '../EditForm/EditForm';\r\nimport Modal from '../Modal/Modal';\r\n\r\nimport s from './ContactsList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const [modalActive, setModalActive] = useState(false);\r\n  const [currentContact, setCurrentContact] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const { items } = useSelector(getContacts);\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const filter = useSelector(getFilter);\r\n\r\n  const getVisibleContactsList = () => {\r\n    const normolizedFilter = filter.request.toLowerCase().trim();\r\n    return items.filter(contact =>\r\n      contact.name.toLowerCase().includes(normolizedFilter)\r\n    );\r\n  };\r\n  const visibleContacts = getVisibleContactsList();\r\n\r\n  const handleEditContact = contact => {\r\n    setModalActive(true);\r\n    setCurrentContact(contact);\r\n  };\r\n\r\n  const fnDelete = id => {\r\n    dispatch(deleteContact(id));\r\n    Notify.success('contact deleted',{position:'center-top'});\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ol className={s.list}>\r\n        {visibleContacts.map(({ id, name, number }) => (\r\n          <Contact\r\n            key={id}\r\n            handleEditContact={handleEditContact}\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            fnDelete={fnDelete}\r\n          />\r\n        ))}\r\n      </ol>\r\n      <Modal active={modalActive} setActive={setModalActive}>\r\n        <EditForm currentContact={currentContact} setActive={setModalActive} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__Pa-FW\"};","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/selectors';\r\n\r\nimport { changeFilter } from '../../redux/contacts/sliceFilter';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const handleChangeFilter = e => {\r\n    dispatch(changeFilter(e.currentTarget.value));\r\n  };\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      <input\r\n        type=\"text\"\r\n        value={filter.request}\r\n        onChange={handleChangeFilter}\r\n        placeholder=\"Find contacts by name\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { RotatingLines } from 'react-loader-spinner';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Spinner = () => {\n  return createPortal(\n    <div\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: ' rgba(0, 0, 0, 0.2)',\n        zIndex: 1200,\n      }}\n    >\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Spinner;\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { RiUserAddLine } from \"react-icons/ri\";\r\n\r\nimport s from './Contacts.module.css'\r\n\r\nimport Form from '../../Components/Form/Form';\r\nimport ContactList from '../../Components/ContactList/ContactList';\r\nimport Filter from '../../Components/Filter/Filter';\r\nimport Spinner from '../../Components/Spinner/Spinner';\r\nimport Modal from '../../Components/Modal/Modal';\r\n\r\nimport { getContacts } from '../../redux/contacts/selectors';\r\nimport { fetchContacts } from '../../redux/contacts/operations';\r\n\r\nexport default function Contacts() {\r\n  const [modalActive, setModalActive] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { items, error, isLoading } = useSelector(getContacts);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.container}  >\r\n        <button className={s.button} onClick={() => setModalActive(true)}><RiUserAddLine size={'20px'} style={{marginRight:'5px'}}/>Add</button>\r\n\r\n        {items.length > 0 && <Filter />}\r\n      </div>\r\n      {items.length > 0 && <ContactList />}\r\n\r\n      <Modal active={modalActive} setActive={setModalActive}>\r\n        <Form setActive={setModalActive} />\r\n      </Modal>\r\n      {isLoading && !error && <Spinner />}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["getContacts","state","contacts","getFilter","filter","Form","_ref","setActive","dispatch","useDispatch","items","useSelector","initialFormData","name","number","_useState","useState","_useState2","_slicedToArray","formData","setFormData","handleChange","event","_event$target","target","value","prevFormData","_objectSpread","_defineProperty","nameUniquenessCheck","newName","some","contact","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","Notify","position","abrupt","addContact","unwrap","t0","stop","_x","apply","arguments","_jsxs","onSubmit","className","s","children","_jsx","placeholder","type","pattern","title","required","onChange","id","fnDelete","handleEditContact","onClick","FaUserEdit","color","MdDelete","currentContact","updateContact","defaultValue","active","stopPropagation","modalActive","setModalActive","_useState3","_useState4","setCurrentContact","useEffect","fetchContacts","visibleContacts","normolizedFilter","request","toLowerCase","trim","includes","getVisibleContactsList","deleteContact","_Fragment","map","Contact","Modal","EditForm","changeFilter","currentTarget","modalRoot","document","querySelector","createPortal","style","top","left","width","height","display","justifyContent","alignItems","backgroundColor","zIndex","RotatingLines","strokeColor","strokeWidth","animationDuration","visible","Contacts","_useSelector","error","isLoading","RiUserAddLine","size","marginRight","length","Filter","ContactList","Spinner"],"sourceRoot":""}