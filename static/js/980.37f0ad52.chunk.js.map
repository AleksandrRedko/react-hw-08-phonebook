{"version":3,"file":"static/js/980.37f0ad52.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-hw-08-phonebook/./src/Components/Form/Form.module.css?ea3d","Components/Form/Form.js","webpack://react-hw-08-phonebook/./src/Components/ContactList/ContactsList.module.css?88eb","Components/ContactList/ContactList.js","webpack://react-hw-08-phonebook/./src/Components/Filter/Filter.module.css?3b56","Components/Filter/Filter.js","Components/Spinner/Spinner.js","pages/Contacts.js"],"sourcesContent":["export const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__VflAB\",\"input\":\"Form_input__V7vxJ\",\"button\":\"Form_button__e2Abc\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from '../../redux/contacts/operations';\nimport { getContacts } from '../../redux/contacts/selectors';\n\nimport s from './Form.module.css';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const { items } = useSelector(getContacts);\n  // \"name\": \"Jacob Mercer\",\n  // \"number\": \"761-23-96\"\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const nameUniquenessCheck = newName => {\n    return items.some(contact => contact.name === newName);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (nameUniquenessCheck(name)) {\n      alert('такой контакт уже есть');\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__6BcgI\",\"item\":\"ContactsList_item__cqxBg\",\"button\":\"ContactsList_button__ZDqly\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { fetchContacts, deleteContact } from '../../redux/contacts/operations';\nimport { getContacts, getFilter } from '../../redux/contacts/selectors';\n\nimport s from './ContactsList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const { items } = useSelector(getContacts);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filter = useSelector(getFilter);\n\n  const getVisibleContactsList = () => {\n    const normolizedFilter = filter.request.toLowerCase().trim();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(normolizedFilter)\n    );\n  };\n  const visibleContacts = getVisibleContactsList();\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts.map(({ id, name, phone }) => (\n        <li className={s.item} key={id}>\n          <p>\n            {name}: {phone}\n          </p>\n          <button\n            className={s.button}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            удалить\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__8DZI6\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\n\nimport { changeFilter } from '../../redux/contacts/sliceFilter';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChangeFilter = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" value={filter.request} onChange={handleChangeFilter} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import { Bars } from 'react-loader-spinner';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Spinner = () => {\n  return createPortal(\n    <div\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100vw',\n        height: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: ' rgba(0, 0, 0, 0.2)',\n        zIndex: 1200,\n      }}\n    >\n      <Bars\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"bars-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Spinner;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport Form from '../Components/Form/Form';\nimport ContactList from '../Components/ContactList/ContactList';\nimport Filter from '../Components/Filter/Filter';\nimport Spinner from '../Components/Spinner/Spinner';\n\nimport { getContacts } from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const { items, error, isLoading } = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1 className=\"title\">Phonebook</h1>\n      <Form />\n      {items.length > 0 && (\n        <>\n          <h2 className=\"title\">Contacts</h2>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n      {isLoading && !error && <Spinner />}\n    </div>\n  );\n}\n"],"names":["getContacts","state","contacts","getFilter","filter","Form","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","items","useSelector","handleChange","e","_e$currentTarget","currentTarget","value","_jsxs","onSubmit","newName","preventDefault","some","contact","alert","addContact","className","s","children","_jsx","type","pattern","title","required","onChange","useEffect","fetchContacts","visibleContacts","normolizedFilter","request","toLowerCase","trim","includes","getVisibleContactsList","map","_ref","id","phone","onClick","deleteContact","changeFilter","modalRoot","document","querySelector","createPortal","style","position","top","left","width","height","display","justifyContent","alignItems","backgroundColor","zIndex","Bars","color","ariaLabel","wrapperStyle","wrapperClass","visible","Contacts","_useSelector","error","isLoading","length","_Fragment","Filter","ContactList","Spinner"],"sourceRoot":""}